{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","_components__WEBPACK_IMPORTED_MODULE_3__","_utils__WEBPACK_IMPORTED_MODULE_4__","_assets_images_avatars_intro_rounded__WEBPACK_IMPORTED_MODULE_5__","getAuthorAvatar","author","volodymyrKushnir2017Avatar","romanSahan2017Avatar","alexandrTovmach2018Avatar","pavelNemchenko2017Avatar","rostyslavDiakiv2018Avatar","nikitaKrasnov2018Avatar","Index","_ref","data","allMdx","edges","a","createElement","Fragment","description","keywords","className","class","href","title","viewBox","xmlns","fill","fillRule","transform","map","_ref2","index","_ref2$node","node","slug","fields","_ref2$node$exports$me","exports","metadata","duration","publishedAt","orderId","lectureTitle","isPublished","isDateInThePast","key","classNames","disabled","to","dangerouslySetInnerHTML","__html","role","aria-label"],"mappings":"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","file":"component---src-pages-index-js-e0e9e415dbab877775d7.js","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport { Link, graphql } from \"gatsby\";\nimport { SEO, Header, Footer } from \"../components\";\nimport { isDateInThePast } from \"../utils\";\nimport {\n  volodymyrKushnir2017Avatar,\n  romanSahan2017Avatar,\n  alexandrTovmach2018Avatar,\n  pavelNemchenko2017Avatar,\n  rostyslavDiakiv2018Avatar,\n  nikitaKrasnov2018Avatar\n } from \"../assets/images/avatars/intro-rounded\";\nimport \"./index.css\";\n\nconst getAuthorAvatar = author => {\n  switch (author) {\n    case \"–í–æ–ª–æ–¥–∏–º–∏—Ä –ö—É—à–Ω—ñ—Ä\":\n      return volodymyrKushnir2017Avatar;\n    case \"–†–æ–º–∞–Ω –°–∞–≥–∞–Ω\":\n      return romanSahan2017Avatar;\n    case \"–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –¢–æ–≤–º–∞—á\":\n      return alexandrTovmach2018Avatar;\n    case \"–ü–∞–≤–µ–ª –ù–µ–º—á–µ–Ω–∫–æ\":\n      return pavelNemchenko2017Avatar;\n    case \"–†–æ—Å—Ç–∏—Å–ª–∞–≤ –î—è–∫—ñ–≤\":\n      return rostyslavDiakiv2018Avatar;\n    case \"–ù–∏–∫–∏—Ç–∞ –ö—Ä–∞—Å–Ω–æ–≤\":\n      return nikitaKrasnov2018Avatar;\n    default:\n      return undefined;\n  }\n}\n\nconst Index = ({ data: { allMdx: { edges: data } } }) => (\n  <>\n    <SEO description=\"Hi\" keywords={[]} />\n    <div className=\"container grid-lg\">\n      <div className=\"columns\">\n        <div className=\"column\">\n          <Header />\n          <article>\n            <div className=\"hero\">\n              <div class=\"hero-body text-center\">\n                <div><strong>‚Äî Hey, –ø—Ä–∏–≤—ñ—Ç, –ø—Ä–∏–≤–µ—Ç <span class=\"waving-hand\">üëã</span>!</strong> –¶–µ ‚Äî –ª–µ–∫—Ü—ñ—ó –¥—Ä—É–≥–æ–≥–æ –µ—Ç–∞–ø—É –¥–ª—è</div>\n                <h1 className=\"mainpage-link\">\n                  <a href=\"https://academy.binary-studio.com/\" title=\"Binary Studio Academy\">\n                    <svg\n                      className=\"logo\"\n                      viewBox=\"0 0 105 99\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <g fill=\"none\" fillRule=\"evenodd\">\n                        <path\n                          d=\"M44.9269232,62.8812382 C45.1942077,63.4971831 44.4998288,64.0859815 43.937223,63.7190356 L14.3088315,44.3757436 C12.0499973,43.0773915 12.565875,40.6042509 14.3088315,39.8497652 L30.8944879,33.724951 C31.5430733,33.4853129 32.2645545,33.7942214 32.5411846,34.427952 L44.9269232,62.8812382 Z\"\n                          fill=\"#FFC712\"\n                          transform=\"translate(15 14)\"\n                        />\n                        <path\n                          d=\"M72.1925572,59.2141192 L53.9994557,67.0903512 C52.8396654,67.5930297 51.4527766,66.9649156 50.8995165,65.6880936 L27.463527,11.5645066 C26.9093323,10.2848763 27.4027806,8.83862262 28.5653746,8.33500806 L46.7575415,0.458776008 C47.9182665,-0.0429663717 49.3060897,0.584211603 49.8593499,1.86103363 L73.2953393,55.9846206 C73.8485995,57.2642509 73.3551513,58.7105046 72.1925572,59.2141192\"\n                          fill=\"#00ADEE\"\n                          transform=\"translate(15 14)\"\n                        />\n                        <path\n                          d=\"M24.6823666,16.0343198 C25.9608462,18.9343158 28.8953681,25.7377927 30.0420746,28.401895 C30.3009481,29.0000543 30.0046922,29.68995 29.3962929,29.9183552 L16.7171021,34.6746108 C16.1582345,34.8833581 15.622731,34.319834 15.8582404,33.7712873 L23.4908011,16.0408724 C23.7160304,15.5194722 24.4533991,15.5138557 24.6823666,16.0343198\"\n                          fill=\"#EC1848\"\n                          transform=\"translate(15 14)\"\n                        />\n                        <path\n                          d=\"M25.3513254,56.3505369 L11.4272992,47.0561337 C10.8759081,46.6882517 10.1263901,46.9082321 9.86004016,47.5157522 L1.88356093,65.7216991 C1.47983053,66.6456165 2.41439165,67.5863835 3.33867261,67.1866745 L25.2279634,57.7144149 C25.7943074,57.4691603 25.8643995,56.6931445 25.3513254,56.3505369\"\n                          fill=\"#EC1848\"\n                          transform=\"translate(15 14)\"\n                        />\n                        <path\n                          d=\"M25.3513254,56.3505369 L11.4272992,47.0561337 C10.8759081,46.6882517 10.1263901,46.9082321 9.86004016,47.5157522 L19.2617251,60.2961416 L25.2279634,57.7144149 C25.7943074,57.4691603 25.8643995,56.6931445 25.3513254,56.3505369\"\n                          fill=\"#C22035\"\n                          transform=\"translate(15 14)\"\n                        />\n                      </g>\n                    </svg>\n                    <strong>Binary Studio Academy</strong>\n                  </a>\n                </h1>\n                <p>‚Äî —â–æ—Ä—ñ—á–Ω–æ–≥–æ –ª—ñ—Ç–Ω—å–æ–≥–æ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ–≥–æ –æ–Ω–ª–∞–π–Ω-—ñ–Ω—Ç–µ–Ω—Å–∏–≤—É –∑ —Ä–æ–∑—Ä–æ–±–∫–∏ –≤–µ–±-–¥–æ–¥–∞—Ç–∫—ñ–≤.</p>\n              </div>\n            </div>\n            <div className=\"columns\">\n              {data.map(({ node: { fields: { slug }, exports: { metadata: { title, description, author, duration, publishedAt, orderId } } } }, index) => {\n                const lectureTitle = <h2 className=\"lecture-title\">\n                  <span><strong>{title}</strong></span>\n                </h2>;\n                const isPublished = isDateInThePast(publishedAt);\n                return (\n                  <div key={index} className=\"column col-6 col-sm-12\">\n                    <div className={classNames(\"panel\", \"lecture-panel\", {\n                      \"disabled\": !isPublished\n                    })}>\n                      <div className=\"panel-header\">\n                        {\n                          isPublished\n                          ? <Link to={`.${slug}`} title={title}>{lectureTitle}</Link>\n                          : lectureTitle\n                        }\n                      </div>\n                      <div className=\"panel-body\">\n                        <span dangerouslySetInnerHTML={{ __html: description }} />\n                      </div>\n                      <div className=\"panel-footer\">\n                        <div className=\"lecture-meta\">\n                          <div className=\"lecture-author\">\n                            <div className=\"avatar-wrapper\">\n                              <object data={getAuthorAvatar(author)} role=\"img\" aria-label={author}></object>\n                            </div>\n                            <div className=\"lecture-author-name\">\n                              {author}\n                            </div>\n                          </div>\n                          {\n                            duration &&\n                            <span className=\"lecture-duration text-gray\"><small>{duration}</small></span>\n                          }\n                        </div>\n                        {orderId && <span class=\"lecture-number text-gray\"><small>#{orderId}</small></span>}\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </article>\n          <Footer />\n        </div>\n      </div>\n    </div>\n  </>\n);\n\nexport const pageQuery = graphql`\n  query {\n    allMdx (filter: {\n      fileAbsolutePath: {\n        regex: \"/pages\\/lectures\\/.*\\/index[.]mdx$/\"\n      }\n    }, sort: {\n      fields: [exports___metadata___orderId]\n      order: ASC\n    }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          exports {\n            metadata {\n              orderId\n              title\n              description\n              author\n              publishedAt\n              duration\n            }\n          }\n        }\n      }\n    }\n  }`\n;\n\nexport default Index;"],"sourceRoot":""}